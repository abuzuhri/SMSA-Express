//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SMSAExpressServiceReference
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://track.smsaexpress.com/secom/SMSAWebserviceIntl", ConfigurationName="SMSAExpressServiceReference.SMSAWebServiceIntlSoap")]
    public interface SMSAWebServiceIntlSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://track.smsaexpress.com/secom/SMSAWebserviceIntl/addShipment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> addShipmentAsync(
                    string passKey, 
                    string refNo, 
                    string sentDate, 
                    string idNo, 
                    string cName, 
                    string cntry, 
                    string cCity, 
                    string cZip, 
                    string cPOBox, 
                    string cMobile, 
                    string cTel1, 
                    string cTel2, 
                    string cAddr1, 
                    string cAddr2, 
                    string shipType, 
                    int PCs, 
                    string cEmail, 
                    string carrValue, 
                    string carrCurr, 
                    string codAmt, 
                    string weight, 
                    string custVal, 
                    string custCurr, 
                    string insrAmt, 
                    string insrCurr, 
                    string itemDesc, 
                    string vatValue, 
                    string harmCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://track.smsaexpress.com/secom/SMSAWebserviceIntl/addShip", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> addShipAsync(
                    string passKey, 
                    string refNo, 
                    string sentDate, 
                    string idNo, 
                    string cName, 
                    string cntry, 
                    string cCity, 
                    string cZip, 
                    string cPOBox, 
                    string cMobile, 
                    string cTel1, 
                    string cTel2, 
                    string cAddr1, 
                    string cAddr2, 
                    string shipType, 
                    int PCs, 
                    string cEmail, 
                    string carrValue, 
                    string carrCurr, 
                    string codAmt, 
                    string weight, 
                    string custVal, 
                    string custCurr, 
                    string insrAmt, 
                    string insrCurr, 
                    string itemDesc, 
                    string sName, 
                    string sContact, 
                    string sAddr1, 
                    string sAddr2, 
                    string sCity, 
                    string sPhone, 
                    string sCntry, 
                    string prefDelvDate, 
                    string gpsPoints, 
                    string vatValue, 
                    string harmCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://track.smsaexpress.com/secom/SMSAWebserviceIntl/addShipPDF", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SMSAExpressServiceReference.addShipPDFResp> addShipPDFAsync(
                    string passKey, 
                    string refNo, 
                    string sentDate, 
                    string idNo, 
                    string cName, 
                    string cntry, 
                    string cCity, 
                    string cZip, 
                    string cPOBox, 
                    string cMobile, 
                    string cTel1, 
                    string cTel2, 
                    string cAddr1, 
                    string cAddr2, 
                    string shipType, 
                    int PCs, 
                    string cEmail, 
                    string carrValue, 
                    string carrCurr, 
                    string codAmt, 
                    string weight, 
                    string custVal, 
                    string custCurr, 
                    string insrAmt, 
                    string insrCurr, 
                    string itemDesc, 
                    string sName, 
                    string sContact, 
                    string sAddr1, 
                    string sAddr2, 
                    string sCity, 
                    string sPhone, 
                    string sCntry, 
                    string prefDelvDate, 
                    string gpsPoints, 
                    string vatValue, 
                    string harmCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://track.smsaexpress.com/secom/SMSAWebserviceIntl/addShipIQF", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> addShipIQFAsync(
                    string passKey, 
                    string refNo, 
                    string sentDate, 
                    string idNo, 
                    string cName, 
                    string cntry, 
                    string cCity, 
                    string cZip, 
                    string cPOBox, 
                    string cMobile, 
                    string cTel1, 
                    string cTel2, 
                    string cAddr1, 
                    string cAddr2, 
                    string shipType, 
                    int PCs, 
                    string cEmail, 
                    string carrValue, 
                    string carrCurr, 
                    string codAmt, 
                    string weight, 
                    string custVal, 
                    string custCurr, 
                    string insrAmt, 
                    string insrCurr, 
                    string itemDesc, 
                    string sName, 
                    string sContact, 
                    string sAddr1, 
                    string sAddr2, 
                    string sCity, 
                    string sPhone, 
                    string sCntry, 
                    string prefDelvDate, 
                    string gpsPoints, 
                    string vatValue, 
                    string harmCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://track.smsaexpress.com/secom/SMSAWebserviceIntl/addShipMPS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> addShipMPSAsync(
                    string passKey, 
                    string refNo, 
                    string sentDate, 
                    string idNo, 
                    string cName, 
                    string cntry, 
                    string cCity, 
                    string cZip, 
                    string cPOBox, 
                    string cMobile, 
                    string cTel1, 
                    string cTel2, 
                    string cAddr1, 
                    string cAddr2, 
                    string shipType, 
                    int PCs, 
                    string cEmail, 
                    string carrValue, 
                    string carrCurr, 
                    string codAmt, 
                    string weight, 
                    string custVal, 
                    string custCurr, 
                    string insrAmt, 
                    string insrCurr, 
                    string itemDesc, 
                    string sName, 
                    string sContact, 
                    string sAddr1, 
                    string sAddr2, 
                    string sCity, 
                    string sPhone, 
                    string sCntry, 
                    string prefDelvDate, 
                    string gpsPoints, 
                    string vatValue, 
                    string harmCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://track.smsaexpress.com/secom/SMSAWebserviceIntl/stoShipment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> stoShipmentAsync(string awbNo, string passkey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://track.smsaexpress.com/secom/SMSAWebserviceIntl/addShipmentDelv", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> addShipmentDelvAsync(
                    string passKey, 
                    string refNo, 
                    string sentDate, 
                    string idNo, 
                    string cName, 
                    string cntry, 
                    string cCity, 
                    string cZip, 
                    string cPOBox, 
                    string cMobile, 
                    string cTel1, 
                    string cTel2, 
                    string cAddr1, 
                    string cAddr2, 
                    string shipType, 
                    int PCs, 
                    string cEmail, 
                    string carrValue, 
                    string carrCurr, 
                    string codAmt, 
                    string weight, 
                    string custVal, 
                    string custCurr, 
                    string insrAmt, 
                    string insrCurr, 
                    string itemDesc, 
                    string prefDelvDate, 
                    string gpsPoints, 
                    string vatValue, 
                    string harmCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://track.smsaexpress.com/secom/SMSAWebserviceIntl/getTracking", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SMSAExpressServiceReference.ArrayOfXElement> getTrackingAsync(string awbNo, string passkey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://track.smsaexpress.com/secom/SMSAWebserviceIntl/getTrack", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SMSAExpressServiceReference.getTrackResp> getTrackAsync(string awbNo, string passkey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://track.smsaexpress.com/secom/SMSAWebserviceIntl/getTrackingwithRef", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SMSAExpressServiceReference.ArrayOfXElement> getTrackingwithRefAsync(string awbNo, string passkey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://track.smsaexpress.com/secom/SMSAWebserviceIntl/getStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> getStatusAsync(string awbNo, string passkey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://track.smsaexpress.com/secom/SMSAWebserviceIntl/getStatusByRef", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> getStatusByRefAsync(string refNo, string passkey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://track.smsaexpress.com/secom/SMSAWebserviceIntl/getTrackingByRef", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SMSAExpressServiceReference.ArrayOfXElement> getTrackingByRefAsync(string refNo, string passkey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://track.smsaexpress.com/secom/SMSAWebserviceIntl/getShipUpdates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SMSAExpressServiceReference.ArrayOfXElement> getShipUpdatesAsync(int rowId, string passKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://track.smsaexpress.com/secom/SMSAWebserviceIntl/getShipmentUpdates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SMSAExpressServiceReference.getShipmentUpdatesResp> getShipmentUpdatesAsync(int rowId, string passKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://track.smsaexpress.com/secom/SMSAWebserviceIntl/cancelShipment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> cancelShipmentAsync(string awbNo, string passkey, string reas);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://track.smsaexpress.com/secom/SMSAWebserviceIntl/getRTLCities", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SMSAExpressServiceReference.ArrayOfXElement> getRTLCitiesAsync(string passkey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://track.smsaexpress.com/secom/SMSAWebserviceIntl/getRTLRetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SMSAExpressServiceReference.ArrayOfXElement> getRTLRetailsAsync(string cityCode, string passkey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://track.smsaexpress.com/secom/SMSAWebserviceIntl/getAllRetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SMSAExpressServiceReference.ArrayOfXElement> getAllRetailsAsync(string passkey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://track.smsaexpress.com/secom/SMSAWebserviceIntl/getPDF", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SMSAExpressServiceReference.getPDFResponse> getPDFAsync(SMSAExpressServiceReference.getPDFRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://track.smsaexpress.com/secom/SMSAWebserviceIntl/getPDFSino", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SMSAExpressServiceReference.getPDFSinoResponse> getPDFSinoAsync(SMSAExpressServiceReference.getPDFSinoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://track.smsaexpress.com/secom/SMSAWebserviceIntl/getPDFBr", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SMSAExpressServiceReference.getPDFBrResponse> getPDFBrAsync(SMSAExpressServiceReference.getPDFBrRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://track.smsaexpress.com/secom/SMSAWebserviceIntl/getDeliveredShipments", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SMSAExpressServiceReference.DeliveredShipmentResponse> getDeliveredShipmentsAsync(string passKey, string fromDate, string ToDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://track.smsaexpress.com/secom/SMSAWebserviceIntl/getShipCharges", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<SMSAExpressServiceReference.getShipChargesResp> getShipChargesAsync(string passKey, string shipCity, string shipCntry, string destCity, string destCntry, string shipType, double codAmt, double weight);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://track.smsaexpress.com/secom/SMSAWebserviceIntl")]
    public partial class addShipPDFResp
    {
        
        private string responseField;
        
        private byte[] aPDFField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Response
        {
            get
            {
                return this.responseField;
            }
            set
            {
                this.responseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", Order=1)]
        public byte[] aPDF
        {
            get
            {
                return this.aPDFField;
            }
            set
            {
                this.aPDFField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://track.smsaexpress.com/secom/SMSAWebserviceIntl")]
    public partial class getShipChargesResp
    {
        
        private string requestStatusField;
        
        private string shipChargesField;
        
        private string shipChargesCurrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string RequestStatus
        {
            get
            {
                return this.requestStatusField;
            }
            set
            {
                this.requestStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ShipCharges
        {
            get
            {
                return this.shipChargesField;
            }
            set
            {
                this.shipChargesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ShipChargesCurr
        {
            get
            {
                return this.shipChargesCurrField;
            }
            set
            {
                this.shipChargesCurrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://track.smsaexpress.com/secom/SMSAWebserviceIntl")]
    public partial class DeliveredShipmentDetails
    {
        
        private string awbNoField;
        
        private string refNoField;
        
        private string shipDateField;
        
        private string cNameField;
        
        private string delvToField;
        
        private string delvDateField;
        
        private string cMobileField;
        
        private string codAmtField;
        
        private string itemDescField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string awbNo
        {
            get
            {
                return this.awbNoField;
            }
            set
            {
                this.awbNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string refNo
        {
            get
            {
                return this.refNoField;
            }
            set
            {
                this.refNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string shipDate
        {
            get
            {
                return this.shipDateField;
            }
            set
            {
                this.shipDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string cName
        {
            get
            {
                return this.cNameField;
            }
            set
            {
                this.cNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string delvTo
        {
            get
            {
                return this.delvToField;
            }
            set
            {
                this.delvToField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string delvDate
        {
            get
            {
                return this.delvDateField;
            }
            set
            {
                this.delvDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string cMobile
        {
            get
            {
                return this.cMobileField;
            }
            set
            {
                this.cMobileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string codAmt
        {
            get
            {
                return this.codAmtField;
            }
            set
            {
                this.codAmtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string itemDesc
        {
            get
            {
                return this.itemDescField;
            }
            set
            {
                this.itemDescField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://track.smsaexpress.com/secom/SMSAWebserviceIntl")]
    public partial class DeliveredShipmentResponse
    {
        
        private string requestStatusField;
        
        private DeliveredShipmentDetails[] trackingDetailsListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string RequestStatus
        {
            get
            {
                return this.requestStatusField;
            }
            set
            {
                this.requestStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public DeliveredShipmentDetails[] TrackingDetailsList
        {
            get
            {
                return this.trackingDetailsListField;
            }
            set
            {
                this.trackingDetailsListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://track.smsaexpress.com/secom/SMSAWebserviceIntl")]
    public partial class ShipUpdates
    {
        
        private string rowIdField;
        
        private string awbNoField;
        
        private string evtDateField;
        
        private string activityField;
        
        private string detailsField;
        
        private string locationField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string rowId
        {
            get
            {
                return this.rowIdField;
            }
            set
            {
                this.rowIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string awbNo
        {
            get
            {
                return this.awbNoField;
            }
            set
            {
                this.awbNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string evtDate
        {
            get
            {
                return this.evtDateField;
            }
            set
            {
                this.evtDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Activity
        {
            get
            {
                return this.activityField;
            }
            set
            {
                this.activityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Details
        {
            get
            {
                return this.detailsField;
            }
            set
            {
                this.detailsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Location
        {
            get
            {
                return this.locationField;
            }
            set
            {
                this.locationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://track.smsaexpress.com/secom/SMSAWebserviceIntl")]
    public partial class getShipmentUpdatesResp
    {
        
        private string requestStatusField;
        
        private ShipUpdates[] shipUpdatesListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string RequestStatus
        {
            get
            {
                return this.requestStatusField;
            }
            set
            {
                this.requestStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public ShipUpdates[] ShipUpdatesList
        {
            get
            {
                return this.shipUpdatesListField;
            }
            set
            {
                this.shipUpdatesListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://track.smsaexpress.com/secom/SMSAWebserviceIntl")]
    public partial class TrackDetails
    {
        
        private string awbNoField;
        
        private string evtDateField;
        
        private string activityField;
        
        private string detailsField;
        
        private string locationField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string awbNo
        {
            get
            {
                return this.awbNoField;
            }
            set
            {
                this.awbNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string evtDate
        {
            get
            {
                return this.evtDateField;
            }
            set
            {
                this.evtDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Activity
        {
            get
            {
                return this.activityField;
            }
            set
            {
                this.activityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Details
        {
            get
            {
                return this.detailsField;
            }
            set
            {
                this.detailsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Location
        {
            get
            {
                return this.locationField;
            }
            set
            {
                this.locationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://track.smsaexpress.com/secom/SMSAWebserviceIntl")]
    public partial class getTrackResp
    {
        
        private string requestStatusField;
        
        private TrackDetails[] trackDetailsListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string RequestStatus
        {
            get
            {
                return this.requestStatusField;
            }
            set
            {
                this.requestStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public TrackDetails[] TrackDetailsList
        {
            get
            {
                return this.trackDetailsListField;
            }
            set
            {
                this.trackDetailsListField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getPDF", WrapperNamespace="http://track.smsaexpress.com/secom/SMSAWebserviceIntl", IsWrapped=true)]
    public partial class getPDFRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://track.smsaexpress.com/secom/SMSAWebserviceIntl", Order=0)]
        public string awbNo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://track.smsaexpress.com/secom/SMSAWebserviceIntl", Order=1)]
        public string passKey;
        
        public getPDFRequest()
        {
        }
        
        public getPDFRequest(string awbNo, string passKey)
        {
            this.awbNo = awbNo;
            this.passKey = passKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getPDFResponse", WrapperNamespace="http://track.smsaexpress.com/secom/SMSAWebserviceIntl", IsWrapped=true)]
    public partial class getPDFResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://track.smsaexpress.com/secom/SMSAWebserviceIntl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] getPDFResult;
        
        public getPDFResponse()
        {
        }
        
        public getPDFResponse(byte[] getPDFResult)
        {
            this.getPDFResult = getPDFResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getPDFSino", WrapperNamespace="http://track.smsaexpress.com/secom/SMSAWebserviceIntl", IsWrapped=true)]
    public partial class getPDFSinoRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://track.smsaexpress.com/secom/SMSAWebserviceIntl", Order=0)]
        public string awbNo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://track.smsaexpress.com/secom/SMSAWebserviceIntl", Order=1)]
        public string passKey;
        
        public getPDFSinoRequest()
        {
        }
        
        public getPDFSinoRequest(string awbNo, string passKey)
        {
            this.awbNo = awbNo;
            this.passKey = passKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getPDFSinoResponse", WrapperNamespace="http://track.smsaexpress.com/secom/SMSAWebserviceIntl", IsWrapped=true)]
    public partial class getPDFSinoResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://track.smsaexpress.com/secom/SMSAWebserviceIntl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] getPDFSinoResult;
        
        public getPDFSinoResponse()
        {
        }
        
        public getPDFSinoResponse(byte[] getPDFSinoResult)
        {
            this.getPDFSinoResult = getPDFSinoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getPDFBr", WrapperNamespace="http://track.smsaexpress.com/secom/SMSAWebserviceIntl", IsWrapped=true)]
    public partial class getPDFBrRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://track.smsaexpress.com/secom/SMSAWebserviceIntl", Order=0)]
        public string awbNo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://track.smsaexpress.com/secom/SMSAWebserviceIntl", Order=1)]
        public string passKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://track.smsaexpress.com/secom/SMSAWebserviceIntl", Order=2)]
        public string forwrdr;
        
        public getPDFBrRequest()
        {
        }
        
        public getPDFBrRequest(string awbNo, string passKey, string forwrdr)
        {
            this.awbNo = awbNo;
            this.passKey = passKey;
            this.forwrdr = forwrdr;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getPDFBrResponse", WrapperNamespace="http://track.smsaexpress.com/secom/SMSAWebserviceIntl", IsWrapped=true)]
    public partial class getPDFBrResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://track.smsaexpress.com/secom/SMSAWebserviceIntl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] getPDFBrResult;
        
        public getPDFBrResponse()
        {
        }
        
        public getPDFBrResponse(byte[] getPDFBrResult)
        {
            this.getPDFBrResult = getPDFBrResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public interface SMSAWebServiceIntlSoapChannel : SMSAExpressServiceReference.SMSAWebServiceIntlSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public partial class SMSAWebServiceIntlSoapClient : System.ServiceModel.ClientBase<SMSAExpressServiceReference.SMSAWebServiceIntlSoap>, SMSAExpressServiceReference.SMSAWebServiceIntlSoap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public SMSAWebServiceIntlSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(SMSAWebServiceIntlSoapClient.GetBindingForEndpoint(endpointConfiguration), SMSAWebServiceIntlSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SMSAWebServiceIntlSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(SMSAWebServiceIntlSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SMSAWebServiceIntlSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(SMSAWebServiceIntlSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SMSAWebServiceIntlSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<string> addShipmentAsync(
                    string passKey, 
                    string refNo, 
                    string sentDate, 
                    string idNo, 
                    string cName, 
                    string cntry, 
                    string cCity, 
                    string cZip, 
                    string cPOBox, 
                    string cMobile, 
                    string cTel1, 
                    string cTel2, 
                    string cAddr1, 
                    string cAddr2, 
                    string shipType, 
                    int PCs, 
                    string cEmail, 
                    string carrValue, 
                    string carrCurr, 
                    string codAmt, 
                    string weight, 
                    string custVal, 
                    string custCurr, 
                    string insrAmt, 
                    string insrCurr, 
                    string itemDesc, 
                    string vatValue, 
                    string harmCode)
        {
            return base.Channel.addShipmentAsync(passKey, refNo, sentDate, idNo, cName, cntry, cCity, cZip, cPOBox, cMobile, cTel1, cTel2, cAddr1, cAddr2, shipType, PCs, cEmail, carrValue, carrCurr, codAmt, weight, custVal, custCurr, insrAmt, insrCurr, itemDesc, vatValue, harmCode);
        }
        
        public System.Threading.Tasks.Task<string> addShipAsync(
                    string passKey, 
                    string refNo, 
                    string sentDate, 
                    string idNo, 
                    string cName, 
                    string cntry, 
                    string cCity, 
                    string cZip, 
                    string cPOBox, 
                    string cMobile, 
                    string cTel1, 
                    string cTel2, 
                    string cAddr1, 
                    string cAddr2, 
                    string shipType, 
                    int PCs, 
                    string cEmail, 
                    string carrValue, 
                    string carrCurr, 
                    string codAmt, 
                    string weight, 
                    string custVal, 
                    string custCurr, 
                    string insrAmt, 
                    string insrCurr, 
                    string itemDesc, 
                    string sName, 
                    string sContact, 
                    string sAddr1, 
                    string sAddr2, 
                    string sCity, 
                    string sPhone, 
                    string sCntry, 
                    string prefDelvDate, 
                    string gpsPoints, 
                    string vatValue, 
                    string harmCode)
        {
            return base.Channel.addShipAsync(passKey, refNo, sentDate, idNo, cName, cntry, cCity, cZip, cPOBox, cMobile, cTel1, cTel2, cAddr1, cAddr2, shipType, PCs, cEmail, carrValue, carrCurr, codAmt, weight, custVal, custCurr, insrAmt, insrCurr, itemDesc, sName, sContact, sAddr1, sAddr2, sCity, sPhone, sCntry, prefDelvDate, gpsPoints, vatValue, harmCode);
        }
        
        public System.Threading.Tasks.Task<SMSAExpressServiceReference.addShipPDFResp> addShipPDFAsync(
                    string passKey, 
                    string refNo, 
                    string sentDate, 
                    string idNo, 
                    string cName, 
                    string cntry, 
                    string cCity, 
                    string cZip, 
                    string cPOBox, 
                    string cMobile, 
                    string cTel1, 
                    string cTel2, 
                    string cAddr1, 
                    string cAddr2, 
                    string shipType, 
                    int PCs, 
                    string cEmail, 
                    string carrValue, 
                    string carrCurr, 
                    string codAmt, 
                    string weight, 
                    string custVal, 
                    string custCurr, 
                    string insrAmt, 
                    string insrCurr, 
                    string itemDesc, 
                    string sName, 
                    string sContact, 
                    string sAddr1, 
                    string sAddr2, 
                    string sCity, 
                    string sPhone, 
                    string sCntry, 
                    string prefDelvDate, 
                    string gpsPoints, 
                    string vatValue, 
                    string harmCode)
        {
            return base.Channel.addShipPDFAsync(passKey, refNo, sentDate, idNo, cName, cntry, cCity, cZip, cPOBox, cMobile, cTel1, cTel2, cAddr1, cAddr2, shipType, PCs, cEmail, carrValue, carrCurr, codAmt, weight, custVal, custCurr, insrAmt, insrCurr, itemDesc, sName, sContact, sAddr1, sAddr2, sCity, sPhone, sCntry, prefDelvDate, gpsPoints, vatValue, harmCode);
        }
        
        public System.Threading.Tasks.Task<string> addShipIQFAsync(
                    string passKey, 
                    string refNo, 
                    string sentDate, 
                    string idNo, 
                    string cName, 
                    string cntry, 
                    string cCity, 
                    string cZip, 
                    string cPOBox, 
                    string cMobile, 
                    string cTel1, 
                    string cTel2, 
                    string cAddr1, 
                    string cAddr2, 
                    string shipType, 
                    int PCs, 
                    string cEmail, 
                    string carrValue, 
                    string carrCurr, 
                    string codAmt, 
                    string weight, 
                    string custVal, 
                    string custCurr, 
                    string insrAmt, 
                    string insrCurr, 
                    string itemDesc, 
                    string sName, 
                    string sContact, 
                    string sAddr1, 
                    string sAddr2, 
                    string sCity, 
                    string sPhone, 
                    string sCntry, 
                    string prefDelvDate, 
                    string gpsPoints, 
                    string vatValue, 
                    string harmCode)
        {
            return base.Channel.addShipIQFAsync(passKey, refNo, sentDate, idNo, cName, cntry, cCity, cZip, cPOBox, cMobile, cTel1, cTel2, cAddr1, cAddr2, shipType, PCs, cEmail, carrValue, carrCurr, codAmt, weight, custVal, custCurr, insrAmt, insrCurr, itemDesc, sName, sContact, sAddr1, sAddr2, sCity, sPhone, sCntry, prefDelvDate, gpsPoints, vatValue, harmCode);
        }
        
        public System.Threading.Tasks.Task<string> addShipMPSAsync(
                    string passKey, 
                    string refNo, 
                    string sentDate, 
                    string idNo, 
                    string cName, 
                    string cntry, 
                    string cCity, 
                    string cZip, 
                    string cPOBox, 
                    string cMobile, 
                    string cTel1, 
                    string cTel2, 
                    string cAddr1, 
                    string cAddr2, 
                    string shipType, 
                    int PCs, 
                    string cEmail, 
                    string carrValue, 
                    string carrCurr, 
                    string codAmt, 
                    string weight, 
                    string custVal, 
                    string custCurr, 
                    string insrAmt, 
                    string insrCurr, 
                    string itemDesc, 
                    string sName, 
                    string sContact, 
                    string sAddr1, 
                    string sAddr2, 
                    string sCity, 
                    string sPhone, 
                    string sCntry, 
                    string prefDelvDate, 
                    string gpsPoints, 
                    string vatValue, 
                    string harmCode)
        {
            return base.Channel.addShipMPSAsync(passKey, refNo, sentDate, idNo, cName, cntry, cCity, cZip, cPOBox, cMobile, cTel1, cTel2, cAddr1, cAddr2, shipType, PCs, cEmail, carrValue, carrCurr, codAmt, weight, custVal, custCurr, insrAmt, insrCurr, itemDesc, sName, sContact, sAddr1, sAddr2, sCity, sPhone, sCntry, prefDelvDate, gpsPoints, vatValue, harmCode);
        }
        
        public System.Threading.Tasks.Task<string> stoShipmentAsync(string awbNo, string passkey)
        {
            return base.Channel.stoShipmentAsync(awbNo, passkey);
        }
        
        public System.Threading.Tasks.Task<string> addShipmentDelvAsync(
                    string passKey, 
                    string refNo, 
                    string sentDate, 
                    string idNo, 
                    string cName, 
                    string cntry, 
                    string cCity, 
                    string cZip, 
                    string cPOBox, 
                    string cMobile, 
                    string cTel1, 
                    string cTel2, 
                    string cAddr1, 
                    string cAddr2, 
                    string shipType, 
                    int PCs, 
                    string cEmail, 
                    string carrValue, 
                    string carrCurr, 
                    string codAmt, 
                    string weight, 
                    string custVal, 
                    string custCurr, 
                    string insrAmt, 
                    string insrCurr, 
                    string itemDesc, 
                    string prefDelvDate, 
                    string gpsPoints, 
                    string vatValue, 
                    string harmCode)
        {
            return base.Channel.addShipmentDelvAsync(passKey, refNo, sentDate, idNo, cName, cntry, cCity, cZip, cPOBox, cMobile, cTel1, cTel2, cAddr1, cAddr2, shipType, PCs, cEmail, carrValue, carrCurr, codAmt, weight, custVal, custCurr, insrAmt, insrCurr, itemDesc, prefDelvDate, gpsPoints, vatValue, harmCode);
        }
        
        public System.Threading.Tasks.Task<SMSAExpressServiceReference.ArrayOfXElement> getTrackingAsync(string awbNo, string passkey)
        {
            return base.Channel.getTrackingAsync(awbNo, passkey);
        }
        
        public System.Threading.Tasks.Task<SMSAExpressServiceReference.getTrackResp> getTrackAsync(string awbNo, string passkey)
        {
            return base.Channel.getTrackAsync(awbNo, passkey);
        }
        
        public System.Threading.Tasks.Task<SMSAExpressServiceReference.ArrayOfXElement> getTrackingwithRefAsync(string awbNo, string passkey)
        {
            return base.Channel.getTrackingwithRefAsync(awbNo, passkey);
        }
        
        public System.Threading.Tasks.Task<string> getStatusAsync(string awbNo, string passkey)
        {
            return base.Channel.getStatusAsync(awbNo, passkey);
        }
        
        public System.Threading.Tasks.Task<string> getStatusByRefAsync(string refNo, string passkey)
        {
            return base.Channel.getStatusByRefAsync(refNo, passkey);
        }
        
        public System.Threading.Tasks.Task<SMSAExpressServiceReference.ArrayOfXElement> getTrackingByRefAsync(string refNo, string passkey)
        {
            return base.Channel.getTrackingByRefAsync(refNo, passkey);
        }
        
        public System.Threading.Tasks.Task<SMSAExpressServiceReference.ArrayOfXElement> getShipUpdatesAsync(int rowId, string passKey)
        {
            return base.Channel.getShipUpdatesAsync(rowId, passKey);
        }
        
        public System.Threading.Tasks.Task<SMSAExpressServiceReference.getShipmentUpdatesResp> getShipmentUpdatesAsync(int rowId, string passKey)
        {
            return base.Channel.getShipmentUpdatesAsync(rowId, passKey);
        }
        
        public System.Threading.Tasks.Task<string> cancelShipmentAsync(string awbNo, string passkey, string reas)
        {
            return base.Channel.cancelShipmentAsync(awbNo, passkey, reas);
        }
        
        public System.Threading.Tasks.Task<SMSAExpressServiceReference.ArrayOfXElement> getRTLCitiesAsync(string passkey)
        {
            return base.Channel.getRTLCitiesAsync(passkey);
        }
        
        public System.Threading.Tasks.Task<SMSAExpressServiceReference.ArrayOfXElement> getRTLRetailsAsync(string cityCode, string passkey)
        {
            return base.Channel.getRTLRetailsAsync(cityCode, passkey);
        }
        
        public System.Threading.Tasks.Task<SMSAExpressServiceReference.ArrayOfXElement> getAllRetailsAsync(string passkey)
        {
            return base.Channel.getAllRetailsAsync(passkey);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SMSAExpressServiceReference.getPDFResponse> SMSAExpressServiceReference.SMSAWebServiceIntlSoap.getPDFAsync(SMSAExpressServiceReference.getPDFRequest request)
        {
            return base.Channel.getPDFAsync(request);
        }
        
        public System.Threading.Tasks.Task<SMSAExpressServiceReference.getPDFResponse> getPDFAsync(string awbNo, string passKey)
        {
            SMSAExpressServiceReference.getPDFRequest inValue = new SMSAExpressServiceReference.getPDFRequest();
            inValue.awbNo = awbNo;
            inValue.passKey = passKey;
            return ((SMSAExpressServiceReference.SMSAWebServiceIntlSoap)(this)).getPDFAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SMSAExpressServiceReference.getPDFSinoResponse> SMSAExpressServiceReference.SMSAWebServiceIntlSoap.getPDFSinoAsync(SMSAExpressServiceReference.getPDFSinoRequest request)
        {
            return base.Channel.getPDFSinoAsync(request);
        }
        
        public System.Threading.Tasks.Task<SMSAExpressServiceReference.getPDFSinoResponse> getPDFSinoAsync(string awbNo, string passKey)
        {
            SMSAExpressServiceReference.getPDFSinoRequest inValue = new SMSAExpressServiceReference.getPDFSinoRequest();
            inValue.awbNo = awbNo;
            inValue.passKey = passKey;
            return ((SMSAExpressServiceReference.SMSAWebServiceIntlSoap)(this)).getPDFSinoAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SMSAExpressServiceReference.getPDFBrResponse> SMSAExpressServiceReference.SMSAWebServiceIntlSoap.getPDFBrAsync(SMSAExpressServiceReference.getPDFBrRequest request)
        {
            return base.Channel.getPDFBrAsync(request);
        }
        
        public System.Threading.Tasks.Task<SMSAExpressServiceReference.getPDFBrResponse> getPDFBrAsync(string awbNo, string passKey, string forwrdr)
        {
            SMSAExpressServiceReference.getPDFBrRequest inValue = new SMSAExpressServiceReference.getPDFBrRequest();
            inValue.awbNo = awbNo;
            inValue.passKey = passKey;
            inValue.forwrdr = forwrdr;
            return ((SMSAExpressServiceReference.SMSAWebServiceIntlSoap)(this)).getPDFBrAsync(inValue);
        }
        
        public System.Threading.Tasks.Task<SMSAExpressServiceReference.DeliveredShipmentResponse> getDeliveredShipmentsAsync(string passKey, string fromDate, string ToDate)
        {
            return base.Channel.getDeliveredShipmentsAsync(passKey, fromDate, ToDate);
        }
        
        public System.Threading.Tasks.Task<SMSAExpressServiceReference.getShipChargesResp> getShipChargesAsync(string passKey, string shipCity, string shipCntry, string destCity, string destCntry, string shipType, double codAmt, double weight)
        {
            return base.Channel.getShipChargesAsync(passKey, shipCity, shipCntry, destCity, destCntry, shipType, codAmt, weight);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.SMSAWebServiceIntlSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.SMSAWebServiceIntlSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.SMSAWebServiceIntlSoap))
            {
                return new System.ServiceModel.EndpointAddress("http://track.smsaexpress.com/SECOM/SMSAwebServiceIntl.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.SMSAWebServiceIntlSoap12))
            {
                return new System.ServiceModel.EndpointAddress("http://track.smsaexpress.com/SECOM/SMSAwebServiceIntl.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            SMSAWebServiceIntlSoap,
            
            SMSAWebServiceIntlSoap12,
        }
    }
    
    [System.Xml.Serialization.XmlSchemaProviderAttribute(null, IsAny=true)]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil-lib", "2.0.3.0")]
    public partial class ArrayOfXElement : object, System.Xml.Serialization.IXmlSerializable
    {
        
        private System.Collections.Generic.List<System.Xml.Linq.XElement> nodesList = new System.Collections.Generic.List<System.Xml.Linq.XElement>();
        
        public ArrayOfXElement()
        {
        }
        
        public virtual System.Collections.Generic.List<System.Xml.Linq.XElement> Nodes
        {
            get
            {
                return this.nodesList;
            }
        }
        
        public virtual System.Xml.Schema.XmlSchema GetSchema()
        {
            throw new System.NotImplementedException();
        }
        
        public virtual void WriteXml(System.Xml.XmlWriter writer)
        {
            System.Collections.Generic.IEnumerator<System.Xml.Linq.XElement> e = nodesList.GetEnumerator();
            for (
            ; e.MoveNext(); 
            )
            {
                ((System.Xml.Serialization.IXmlSerializable)(e.Current)).WriteXml(writer);
            }
        }
        
        public virtual void ReadXml(System.Xml.XmlReader reader)
        {
            for (
            ; (reader.NodeType != System.Xml.XmlNodeType.EndElement); 
            )
            {
                if ((reader.NodeType == System.Xml.XmlNodeType.Element))
                {
                    System.Xml.Linq.XElement elem = new System.Xml.Linq.XElement("default");
                    ((System.Xml.Serialization.IXmlSerializable)(elem)).ReadXml(reader);
                    Nodes.Add(elem);
                }
                else
                {
                    reader.Skip();
                }
            }
        }
    }
}
